-- MinecraftUILib.lua with Key System local MinecraftUI = {} -- Key System Variables local validKeys = {} local keyRequired = false local keyCheckCompleted = false -- Key System Functions function MinecraftUI:SetKey(key) if type(key) == "table" then validKeys = key else validKeys = {key} end keyRequired = true keyCheckCompleted = false end function MinecraftUI:AddKey(key) table.insert(validKeys, key) keyRequired = true end function MinecraftUI:RemoveKey(key) for i, k in ipairs(validKeys) do if k == key then table.remove(validKeys, i) break end end if #validKeys == 0 then keyRequired = false end end function MinecraftUI:DisableKey() keyRequired = false keyCheckCompleted = true end local function createKeyPrompt() local keyGui = Instance.new("ScreenGui") keyGui.Name = "MinecraftUIKeyPrompt" keyGui.ResetOnSpawn = false keyGui.Parent = game:GetService("CoreGui") local keyFrame = Instance.new("Frame", keyGui) keyFrame.Size = UDim2.new(0, 300, 0, 150) keyFrame.Position = UDim2.new(0.5, -150, 0.5, -75) keyFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40) keyFrame.BorderSizePixel = 2 keyFrame.BorderColor3 = Color3.fromRGB(150, 150, 150) keyFrame.Active = true keyFrame.Draggable = true local keyTitle = Instance.new("TextLabel", keyFrame) keyTitle.Size = UDim2.new(1, 0, 0, 30) keyTitle.Position = UDim2.new(0, 0, 0, 0) keyTitle.BackgroundTransparency = 1 keyTitle.Text = "Enter Access Key" keyTitle.Font = Enum.Font.Arcade keyTitle.TextSize = 18 keyTitle.TextColor3 = Color3.fromRGB(255, 255, 255) keyTitle.TextXAlignment = Enum.TextXAlignment.Center local keyInput = Instance.new("TextBox", keyFrame) keyInput.Size = UDim2.new(1, -20, 0, 30) keyInput.Position = UDim2.new(0, 10, 0, 40) keyInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60) keyInput.BorderColor3 = Color3.fromRGB(150, 150, 150) keyInput.BorderSizePixel = 2 keyInput.Text = "" keyInput.PlaceholderText = "Enter key here..." keyInput.Font = Enum.Font.Arcade keyInput.TextSize = 14 keyInput.TextColor3 = Color3.fromRGB(255, 255, 255) keyInput.PlaceholderColor3 = Color3.fromRGB(180, 180, 180) local keyStatus = Instance.new("TextLabel", keyFrame) keyStatus.Size = UDim2.new(1, -20, 0, 20) keyStatus.Position = UDim2.new(0, 10, 0, 80) keyStatus.BackgroundTransparency = 1 keyStatus.Text = "" keyStatus.Font = Enum.Font.Arcade keyStatus.TextSize = 12 keyStatus.TextColor3 = Color3.fromRGB(255, 100, 100) keyStatus.TextXAlignment = Enum.TextXAlignment.Center local keySubmit = Instance.new("TextButton", keyFrame) keySubmit.Size = UDim2.new(0, 80, 0, 30) keySubmit.Position = UDim2.new(0.5, -40, 1, -40) keySubmit.Text = "Submit" keySubmit.Font = Enum.Font.Arcade keySubmit.TextSize = 14 keySubmit.TextColor3 = Color3.fromRGB(255, 255, 255) keySubmit.BackgroundColor3 = Color3.fromRGB(80, 80, 80) keySubmit.BorderColor3 = Color3.fromRGB(150, 150, 150) keySubmit.BorderSizePixel = 2 -- Hover effects keySubmit.MouseEnter:Connect(function() keySubmit.BackgroundColor3 = Color3.fromRGB(100, 100, 100) end) keySubmit.MouseLeave:Connect(function() keySubmit.BackgroundColor3 = Color3.fromRGB(80, 80, 80) end) local function checkKey() local enteredKey = keyInput.Text local isValid = false for _, validKey in ipairs(validKeys) do if enteredKey == validKey then isValid = true break end end if isValid then keyStatus.Text = "Access Granted!" keyStatus.TextColor3 = Color3.fromRGB(100, 255, 100) keyCheckCompleted = true wait(0.5) keyGui:Destroy() else keyStatus.Text = "Invalid Key! Try again." keyStatus.TextColor3 = Color3.fromRGB(255, 100, 100) keyInput.Text = "" end end keySubmit.MouseButton1Click:Connect(checkKey) keyInput.FocusLost:Connect(function(enterPressed) if enterPressed then checkKey() end end) return keyGui end -- MinecraftUILib.lua local MinecraftUI = {} local function createBaseWindow(titleText) 	local gui = Instance.new("ScreenGui") 	gui.Name = "MinecraftUILib" 	gui.ResetOnSpawn = false 	local main = Instance.new("Frame", gui) 	main.Size = UDim2.new(0, 450, 0, 200) 	main.Position = UDim2.new(0.5, -225, 0.5, -100) 	main.BackgroundColor3 = Color3.fromRGB(40, 40, 40) 	main.BorderSizePixel = 2 	main.BorderColor3 = Color3.fromRGB(150, 150, 150) 	main.Active = true 	main.Draggable = true 	main.ClipsDescendants = true -- This fixes the dropdown bug 	-- Create minimized state frame (title bar only) 	local minimizedFrame = Instance.new("Frame", gui) 	minimizedFrame.Size = UDim2.new(0, 450, 0, 30) 	minimizedFrame.Position = UDim2.new(0.5, -225, 0.5, -100) 	minimizedFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40) 	minimizedFrame.BorderSizePixel = 2 	minimizedFrame.BorderColor3 = Color3.fromRGB(150, 150, 150) 	minimizedFrame.Active = true 	minimizedFrame.Draggable = true 	minimizedFrame.Visible = false 	local title = Instance.new("TextLabel", main) 	title.Size = UDim2.new(1, -60, 0, 30) 	title.Position = UDim2.new(0, 0, 0, 0) 	title.BackgroundTransparency = 1 	title.Text = titleText or "Minecraft UI" 	title.Font = Enum.Font.Arcade 	title.TextSize = 20 	title.TextColor3 = Color3.fromRGB(255, 255, 255) 	-- Title for minimized frame 	local titleMinimized = Instance.new("TextLabel", minimizedFrame) 	titleMinimized.Size = UDim2.new(1, -60, 0, 30) 	titleMinimized.Position = UDim2.new(0, 0, 0, 0) 	titleMinimized.BackgroundTransparency = 1 	titleMinimized.Text = titleText or "Minecraft UI" 	titleMinimized.Font = Enum.Font.Arcade 	titleMinimized.TextSize = 20 	titleMinimized.TextColor3 = Color3.fromRGB(255, 255, 255) 	local minimize = Instance.new("TextButton", main) 	minimize.Size = UDim2.new(0, 30, 0, 30) 	minimize.Position = UDim2.new(1, -60, 0, 0) 	minimize.Text = "-" 	minimize.Font = Enum.Font.Arcade 	minimize.TextSize = 24 	minimize.TextColor3 = Color3.fromRGB(255, 255, 255) 	minimize.BackgroundColor3 = Color3.fromRGB(60, 60, 60) 	minimize.BorderColor3 = Color3.fromRGB(150, 150, 150) 	-- Restore button for minimized frame 	local restore = Instance.new("TextButton", minimizedFrame) 	restore.Size = UDim2.new(0, 30, 0, 30) 	restore.Position = UDim2.new(1, -60, 0, 0) 	restore.Text = "+" 	restore.Font = Enum.Font.Arcade 	restore.TextSize = 24 	restore.TextColor3 = Color3.fromRGB(255, 255, 255) 	restore.BackgroundColor3 = Color3.fromRGB(60, 60, 60) 	restore.BorderColor3 = Color3.fromRGB(150, 150, 150) 	local close = Instance.new("TextButton", main) 	close.Size = UDim2.new(0, 30, 0, 30) 	close.Position = UDim2.new(1, -30, 0, 0) 	close.Text = "X" 	close.Font = Enum.Font.Arcade 	close.TextSize = 24 	close.TextColor3 = Color3.fromRGB(255, 0, 0) 	close.BackgroundColor3 = Color3.fromRGB(60, 60, 60) 	close.BorderColor3 = Color3.fromRGB(150, 150, 150) 	-- Close button for minimized frame 	local closeMinimized = Instance.new("TextButton", minimizedFrame) 	closeMinimized.Size = UDim2.new(0, 30, 0, 30) 	closeMinimized.Position = UDim2.new(1, -30, 0, 0) 	closeMinimized.Text = "X" 	closeMinimized.Font = Enum.Font.Arcade 	closeMinimized.TextSize = 24 	closeMinimized.TextColor3 = Color3.fromRGB(255, 0, 0) 	closeMinimized.BackgroundColor3 = Color3.fromRGB(60, 60, 60) 	closeMinimized.BorderColor3 = Color3.fromRGB(150, 150, 150) 	-- Confirmation popup 	local confirmFrame = Instance.new("Frame", gui) 	confirmFrame.Size = UDim2.new(0, 200, 0, 100) 	confirmFrame.Position = UDim2.new(0.5, -100, 0.5, -50) 	confirmFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50) 	confirmFrame.BorderColor3 = Color3.fromRGB(150, 150, 150) 	confirmFrame.Visible = false 	local msg = Instance.new("TextLabel", confirmFrame) 	msg.Size = UDim2.new(1, 0, 0, 40) 	msg.Position = UDim2.new(0, 0, 0, 0) 	msg.BackgroundTransparency = 1 	msg.Text = "Are you sure you want to destroy GUI?" 	msg.Font = Enum.Font.Arcade 	msg.TextSize = 16 	msg.TextColor3 = Color3.fromRGB(255, 255, 255) 	msg.TextWrapped = true 	local cancel = Instance.new("TextButton", confirmFrame) 	cancel.Size = UDim2.new(0.5, -5, 0, 30) 	cancel.Position = UDim2.new(0, 5, 1, -35) 	cancel.Text = "Cancel" 	cancel.Font = Enum.Font.Arcade 	cancel.TextSize = 16 	cancel.BackgroundColor3 = Color3.fromRGB(70, 70, 70) 	cancel.BorderColor3 = Color3.fromRGB(150, 150, 150) 	cancel.TextColor3 = Color3.fromRGB(255, 255, 255) 	local yes = Instance.new("TextButton", confirmFrame) 	yes.Size = UDim2.new(0.5, -5, 0, 30) 	yes.Position = UDim2.new(0.5, 0, 1, -35) 	yes.Text = "Yes" 	yes.Font = Enum.Font.Arcade 	yes.TextSize = 16 	yes.BackgroundColor3 = Color3.fromRGB(100, 30, 30) 	yes.BorderColor3 = Color3.fromRGB(150, 150, 150) 	yes.TextColor3 = Color3.fromRGB(255, 255, 255) 	-- Create scrollable content area 	local scrollFrame = Instance.new("ScrollingFrame", main) 	scrollFrame.Size = UDim2.new(1, -20, 1, -80) 	scrollFrame.Position = UDim2.new(0, 10, 0, 40) 	scrollFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35) 	scrollFrame.BorderColor3 = Color3.fromRGB(120, 120, 120) 	scrollFrame.BorderSizePixel = 1 	scrollFrame.ScrollBarThickness = 8 	scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(120, 120, 120) 	scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0) 	scrollFrame.ClipsDescendants = true -- Also ensure scrollframe clips descendants 	-- Tab navigation at bottom 	local tabFrame = Instance.new("Frame", main) 	tabFrame.Size = UDim2.new(1, -20, 0, 30) 	tabFrame.Position = UDim2.new(0, 10, 1, -35) 	tabFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30) 	tabFrame.BorderColor3 = Color3.fromRGB(150, 150, 150) 	tabFrame.BorderSizePixel = 1 	local tabScrollFrame = Instance.new("ScrollingFrame", tabFrame) 	tabScrollFrame.Size = UDim2.new(1, -60, 1, 0) 	tabScrollFrame.Position = UDim2.new(0, 0, 0, 0) 	tabScrollFrame.BackgroundTransparency = 1 	tabScrollFrame.BorderSizePixel = 0 	tabScrollFrame.ScrollBarThickness = 0 	tabScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0) 	tabScrollFrame.ScrollingDirection = Enum.ScrollingDirection.X 	-- Tab navigation buttons 	local tabLeft = Instance.new("TextButton", tabFrame) 	tabLeft.Size = UDim2.new(0, 30, 1, 0) 	tabLeft.Position = UDim2.new(1, -60, 0, 0) 	tabLeft.Text = "<" 	tabLeft.Font = Enum.Font.Arcade 	tabLeft.TextSize = 16 	tabLeft.TextColor3 = Color3.fromRGB(255, 255, 255) 	tabLeft.BackgroundColor3 = Color3.fromRGB(60, 60, 60) 	tabLeft.BorderColor3 = Color3.fromRGB(150, 150, 150) 	local tabRight = Instance.new("TextButton", tabFrame) 	tabRight.Size = UDim2.new(0, 30, 1, 0) 	tabRight.Position = UDim2.new(1, -30, 0, 0) 	tabRight.Text = ">" 	tabRight.Font = Enum.Font.Arcade 	tabRight.TextSize = 16 	tabRight.TextColor3 = Color3.fromRGB(255, 255, 255) 	tabRight.BackgroundColor3 = Color3.fromRGB(60, 60, 60) 	tabRight.BorderColor3 = Color3.fromRGB(150, 150, 150) 	-- Event connections 	minimize.MouseButton1Click:Connect(function() 		main.Visible = false 		minimizedFrame.Visible = true 	end) 	restore.MouseButton1Click:Connect(function() 		minimizedFrame.Visible = false 		main.Visible = true 	end) 	close.MouseButton1Click:Connect(function() 		confirmFrame.Visible = true 	end) 	closeMinimized.MouseButton1Click:Connect(function() 		confirmFrame.Visible = true 	end) 	cancel.MouseButton1Click:Connect(function() 		confirmFrame.Visible = false 	end) 	yes.MouseButton1Click:Connect(function() 		gui:Destroy() 	end) 	-- Tab navigation 	tabLeft.MouseButton1Click:Connect(function() 		tabScrollFrame.CanvasPosition = Vector2.new(math.max(0, tabScrollFrame.CanvasPosition.X - 60), 0) 	end) 	tabRight.MouseButton1Click:Connect(function() 		local maxScroll = math.max(0, tabScrollFrame.CanvasSize.X.Offset - tabScrollFrame.AbsoluteSize.X) 		tabScrollFrame.CanvasPosition = Vector2.new(math.min(maxScroll, tabScrollFrame.CanvasPosition.X + 60), 0) 	end) 	return gui, main, scrollFrame, tabScrollFrame end function MinecraftUI:Create(title) 	local gui, main, scrollFrame, tabScrollFrame = createBaseWindow(title) 	gui.Parent = game:GetService("CoreGui") 	local self = {} 	self.Gui = gui 	self.Main = main 	self.ScrollFrame = scrollFrame 	self.TabScrollFrame = tabScrollFrame 	self.Elements = {} 	self.Tabs = {} 	self.CurrentTab = 1 	-- Update scroll areas 	self.UpdateScrollAreas = function() 		-- Update content scroll area 		local contentHeight = #self.Elements * 40 + 20 		self.ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, contentHeight) 		 		-- Update tab scroll area 		local tabWidth = #self.Tabs * 80 + 10 		self.TabScrollFrame.CanvasSize = UDim2.new(0, tabWidth, 0, 0) 	end 	return setmetatable(self, { 		__index = MinecraftUI 	}) end function MinecraftUI:CreateTab(tabName) 	local tabButton = Instance.new("TextButton", self.TabScrollFrame) 	tabButton.Size = UDim2.new(0, 75, 1, -4) 	tabButton.Position = UDim2.new(0, #self.Tabs * 80 + 5, 0, 2) 	tabButton.Text = tabName 	tabButton.Font = Enum.Font.Arcade 	tabButton.TextSize = 14 	tabButton.TextColor3 = Color3.fromRGB(255, 255, 255) 	tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50) 	tabButton.BorderColor3 = Color3.fromRGB(150, 150, 150) 	tabButton.BorderSizePixel = 1 	local tabIndex = #self.Tabs + 1 	table.insert(self.Tabs, { 		name = tabName, 		button = tabButton, 		elements = {} 	}) 	tabButton.MouseButton1Click:Connect(function() 		self:SwitchTab(tabIndex) 	end) 	self.UpdateScrollAreas() 	return tabIndex end function MinecraftUI:SwitchTab(tabIndex) 	if tabIndex < 1 or tabIndex > #self.Tabs then return end 	 	-- Update button colors 	for i, tab in ipairs(self.Tabs) do 		if i == tabIndex then 			tab.button.BackgroundColor3 = Color3.fromRGB(80, 80, 80) 		else 			tab.button.BackgroundColor3 = Color3.fromRGB(50, 50, 50) 		end 	end 	 	-- Hide all elements 	for _, element in ipairs(self.Elements) do 		element.Visible = false 	end 	 	-- Show current tab elements 	if self.Tabs[tabIndex] then 		for _, element in ipairs(self.Tabs[tabIndex].elements) do 			element.Visible = true 		end 	end 	 	self.CurrentTab = tabIndex end function MinecraftUI:CreateButton(text, callback, tabIndex) 	tabIndex = tabIndex or 1 	if tabIndex > #self.Tabs then 		self:CreateTab("Tab " .. tabIndex) 	end 	local button = Instance.new("TextButton", self.ScrollFrame) 	button.Size = UDim2.new(0, 410, 0, 30) 	button.Position = UDim2.new(0, 10, 0, 10 + (#self.Tabs[tabIndex].elements * 40)) 	button.Text = text or "Button" 	button.Font = Enum.Font.Arcade 	button.TextSize = 16 	button.TextColor3 = Color3.fromRGB(255, 255, 255) 	button.BackgroundColor3 = Color3.fromRGB(80, 80, 80) 	button.BorderColor3 = Color3.fromRGB(150, 150, 150) 	button.BorderSizePixel = 2 	button.Visible = (tabIndex == self.CurrentTab) 	-- Add Minecraft-style hover effect 	button.MouseEnter:Connect(function() 		button.BackgroundColor3 = Color3.fromRGB(100, 100, 100) 	end) 	 	button.MouseLeave:Connect(function() 		button.BackgroundColor3 = Color3.fromRGB(80, 80, 80) 	end) 	button.MouseButton1Click:Connect(function() 		if callback then callback() end 	end) 	table.insert(self.Elements, button) 	table.insert(self.Tabs[tabIndex].elements, button) 	self.UpdateScrollAreas() 	return button end function MinecraftUI:CreateToggle(text, callback, tabIndex) 	tabIndex = tabIndex or 1 	if tabIndex > #self.Tabs then 		self:CreateTab("Tab " .. tabIndex) 	end 	local toggled = false 	local toggle = Instance.new("TextButton", self.ScrollFrame) 	toggle.Size = UDim2.new(0, 410, 0, 30) 	toggle.Position = UDim2.new(0, 10, 0, 10 + (#self.Tabs[tabIndex].elements * 40)) 	toggle.Text = text .. ": OFF" 	toggle.Font = Enum.Font.Arcade 	toggle.TextSize = 16 	toggle.TextColor3 = Color3.fromRGB(255, 255, 255) 	toggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80) 	toggle.BorderColor3 = Color3.fromRGB(150, 150, 150) 	toggle.BorderSizePixel = 2 	toggle.Visible = (tabIndex == self.CurrentTab) 	toggle.MouseEnter:Connect(function() 		toggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100) 	end) 	 	toggle.MouseLeave:Connect(function() 		local color = toggled and Color3.fromRGB(60, 100, 60) or Color3.fromRGB(80, 80, 80) 		toggle.BackgroundColor3 = color 	end) 	toggle.MouseButton1Click:Connect(function() 		toggled = not toggled 		toggle.Text = text .. ": " .. (toggled and "ON" or "OFF") 		toggle.BackgroundColor3 = toggled and Color3.fromRGB(60, 100, 60) or Color3.fromRGB(80, 80, 80) 		if callback then callback(toggled) end 	end) 	table.insert(self.Elements, toggle) 	table.insert(self.Tabs[tabIndex].elements, toggle) 	self.UpdateScrollAreas() 	return toggle end function MinecraftUI:CreateDropdown(text, options, callback, tabIndex) 	tabIndex = tabIndex or 1 	if tabIndex > #self.Tabs then 		self:CreateTab("Tab " .. tabIndex) 	end 	local dropdown = Instance.new("TextButton", self.ScrollFrame) 	dropdown.Size = UDim2.new(0, 410, 0, 30) 	dropdown.Position = UDim2.new(0, 10, 0, 10 + (#self.Tabs[tabIndex].elements * 40)) 	dropdown.Text = text or "Choose..." 	dropdown.Font = Enum.Font.Arcade 	dropdown.TextSize = 16 	dropdown.TextColor3 = Color3.fromRGB(255, 255, 255) 	dropdown.BackgroundColor3 = Color3.fromRGB(80, 80, 80) 	dropdown.BorderColor3 = Color3.fromRGB(150, 150, 150) 	dropdown.BorderSizePixel = 2 	dropdown.Visible = (tabIndex == self.CurrentTab) 	-- Create dropdown options frame - fix positioning to stay within bounds 	local dropdownFrame = Instance.new("Frame", dropdown) -- Parent to dropdown instead of ScrollFrame 	dropdownFrame.Size = UDim2.new(0, 410, 0, math.min(#options * 30, 120)) 	dropdownFrame.Position = UDim2.new(0, 0, 1, 0) -- Position relative to dropdown button 	dropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60) 	dropdownFrame.BorderColor3 = Color3.fromRGB(150, 150, 150) 	dropdownFrame.BorderSizePixel = 2 	dropdownFrame.Visible = false 	dropdownFrame.ZIndex = 10 -- Ensure it appears above other elements 	local optScrollFrame = Instance.new("ScrollingFrame", dropdownFrame) 	optScrollFrame.Size = UDim2.new(1, 0, 1, 0) 	optScrollFrame.Position = UDim2.new(0, 0, 0, 0) 	optScrollFrame.BackgroundTransparency = 1 	optScrollFrame.BorderSizePixel = 0 	optScrollFrame.ScrollBarThickness = 6 	optScrollFrame.CanvasSize = UDim2.new(0, 0, 0, #options * 30) 	optScrollFrame.ZIndex = 11 	for i, optText in ipairs(options) do 		local opt = Instance.new("TextButton", optScrollFrame) 		opt.Size = UDim2.new(1, -6, 0, 30) 		opt.Position = UDim2.new(0, 0, 0, (i - 1) * 30) 		opt.Text = optText 		opt.Font = Enum.Font.Arcade 		opt.TextSize = 14 		opt.TextColor3 = Color3.fromRGB(255, 255, 255) 		opt.BackgroundColor3 = Color3.fromRGB(90, 90, 90) 		opt.BorderColor3 = Color3.fromRGB(150, 150, 150) 		opt.BorderSizePixel = 1 		opt.ZIndex = 12 		opt.MouseEnter:Connect(function() 			opt.BackgroundColor3 = Color3.fromRGB(110, 110, 110) 		end) 		 		opt.MouseLeave:Connect(function() 			opt.BackgroundColor3 = Color3.fromRGB(90, 90, 90) 		end) 		opt.MouseButton1Click:Connect(function() 			dropdown.Text = optText 			dropdownFrame.Visible = false 			if callback then callback(optText) end 		end) 	end 	dropdown.MouseEnter:Connect(function() 		dropdown.BackgroundColor3 = Color3.fromRGB(100, 100, 100) 	end) 	 	dropdown.MouseLeave:Connect(function() 		dropdown.BackgroundColor3 = Color3.fromRGB(80, 80, 80) 	end) 	dropdown.MouseButton1Click:Connect(function() 		dropdownFrame.Visible = not dropdownFrame.Visible 		 		-- Close other open dropdowns 		for _, element in ipairs(self.Elements) do 			if element ~= dropdown and element:IsA("TextButton") and element:FindFirstChild("Frame") then 				element:FindFirstChild("Frame").Visible = false 			end 		end 	end) 	table.insert(self.Elements, dropdown) 	table.insert(self.Tabs[tabIndex].elements, dropdown) 	self.UpdateScrollAreas() 	return dropdown end -- Helper function to create a new slider function MinecraftUI:CreateSlider(text, min, max, default, callback, tabIndex) 	tabIndex = tabIndex or 1 	if tabIndex > #self.Tabs then 		self:CreateTab("Tab " .. tabIndex) 	end 	local currentValue = default or min 	 	local sliderFrame = Instance.new("Frame", self.ScrollFrame) 	sliderFrame.Size = UDim2.new(0, 410, 0, 30) 	sliderFrame.Position = UDim2.new(0, 10, 0, 10 + (#self.Tabs[tabIndex].elements * 40)) 	sliderFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60) 	sliderFrame.BorderColor3 = Color3.fromRGB(150, 150, 150) 	sliderFrame.BorderSizePixel = 2 	sliderFrame.Visible = (tabIndex == self.CurrentTab) 	local sliderLabel = Instance.new("TextLabel", sliderFrame) 	sliderLabel.Size = UDim2.new(0.6, 0, 1, 0) 	sliderLabel.Position = UDim2.new(0, 5, 0, 0) 	sliderLabel.BackgroundTransparency = 1 	sliderLabel.Text = text .. ": " .. currentValue 	sliderLabel.Font = Enum.Font.Arcade 	sliderLabel.TextSize = 14 	sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255) 	sliderLabel.TextXAlignment = Enum.TextXAlignment.Left 	local sliderButton = Instance.new("TextButton", sliderFrame) 	sliderButton.Size = UDim2.new(0, 20, 0, 20) 	sliderButton.Position = UDim2.new(0.6, 0, 0, 5) 	sliderButton.Text = "" 	sliderButton.BackgroundColor3 = Color3.fromRGB(120, 120, 120) 	sliderButton.BorderColor3 = Color3.fromRGB(200, 200, 200) 	sliderButton.BorderSizePixel = 1 	local function updateSlider(percentage) 		percentage = math.max(0, math.min(1, percentage)) 		currentValue = math.floor(min + (max - min) * percentage) 		sliderLabel.Text = text .. ": " .. currentValue 		sliderButton.Position = UDim2.new(0.6 + (0.35 * percentage), -10, 0, 5) 		if callback then callback(currentValue) end 	end 	sliderButton.MouseButton1Down:Connect(function() 		local connection 		connection = game:GetService("UserInputService").InputChanged:Connect(function(input) 			if input.UserInputType == Enum.UserInputType.MouseMovement then 				local relativePos = (input.Position.X - sliderFrame.AbsolutePosition.X - sliderFrame.AbsoluteSize.X * 0.6) / (sliderFrame.AbsoluteSize.X * 0.35) 				updateSlider(relativePos) 			end 		end) 		 		game:GetService("UserInputService").InputEnded:Connect(function(input) 			if input.UserInputType == Enum.UserInputType.MouseButton1 then 				connection:Disconnect() 			end 		end) 	end) 	-- Initialize slider position 	updateSlider((currentValue - min) / (max - min)) 	table.insert(self.Elements, sliderFrame) 	table.insert(self.Tabs[tabIndex].elements, sliderFrame) 	self.UpdateScrollAreas() 	return sliderFrame end -- NEW: TextLabel function that maintains size and shape function MinecraftUI:CreateTextLabel(text, tabIndex) 	tabIndex = tabIndex or 1 	if tabIndex > #self.Tabs then 		self:CreateTab("Tab " .. tabIndex) 	end 	local textLabel = Instance.new("TextLabel", self.ScrollFrame) 	textLabel.Size = UDim2.new(0, 410, 0, 30) 	textLabel.Position = UDim2.new(0, 10, 0, 10 + (#self.Tabs[tabIndex].elements * 40)) 	textLabel.Text = text or "Label" 	textLabel.Font = Enum.Font.Arcade 	textLabel.TextSize = 16 	textLabel.TextColor3 = Color3.fromRGB(255, 255, 255) 	textLabel.BackgroundColor3 = Color3.fromRGB(70, 70, 70) 	textLabel.BorderColor3 = Color3.fromRGB(150, 150, 150) 	textLabel.BorderSizePixel = 2 	textLabel.Visible = (tabIndex == self.CurrentTab) 	textLabel.TextXAlignment = Enum.TextXAlignment.Center 	textLabel.TextYAlignment = Enum.TextYAlignment.Center 	table.insert(self.Elements, textLabel) 	table.insert(self.Tabs[tabIndex].elements, textLabel) 	self.UpdateScrollAreas() 	return textLabel end return MinecraftUI
